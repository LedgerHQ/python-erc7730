# serializer version: 1
# name: test_convert_registry_files[1inch/eip712-1inch-ethereum.json]
  '''
  {
    "context": {
      "eip712": {
        "deployments": [
          {
            "chainId": 1,
            "address": "0x111111125421ca6dc452d289314280a0f8842a65"
          }
        ],
        "domain": {
          "name": "Permit2",
          "chainId": 1,
          "verifyingContract": "0x111111125421ca6dc452d289314280a0f8842a65"
        },
        "schemas": [
          {
            "primaryType": "Order",
            "types": {
              "EIP712Domain": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "name": "version",
                  "type": "string"
                },
                {
                  "name": "chainId",
                  "type": "uint256"
                },
                {
                  "name": "verifyingContract",
                  "type": "address"
                }
              ],
              "Order": [
                {
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "name": "maker",
                  "type": "address"
                },
                {
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "name": "makerAsset",
                  "type": "address"
                },
                {
                  "name": "takerAsset",
                  "type": "address"
                },
                {
                  "name": "makingAmount",
                  "type": "uint256"
                },
                {
                  "name": "takingAmount",
                  "type": "uint256"
                },
                {
                  "name": "makerTraits",
                  "type": "uint256"
                }
              ]
            }
          }
        ]
      }
    },
    "metadata": {
      "owner": "1inch Aggregation Router"
    },
    "display": {
      "formats": {
        "Order": {
          "intent": "1inch Order",
          "fields": [
            {
              "path": "maker",
              "label": "From",
              "format": "raw"
            },
            {
              "path": "makingAmount",
              "label": "Amount sent",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "makerAsset"
              }
            },
            {
              "path": "takingAmount",
              "label": "Receive minimum",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "takerAsset"
              }
            },
            {
              "path": "receiver",
              "label": "To",
              "format": "raw"
            }
          ]
        }
      }
    }
  }
  '''
# ---
# name: test_convert_registry_files[1inch/eip712-1inch-polygon-aggregation-router.json]
  '''
  {
    "context": {
      "eip712": {
        "deployments": [
          {
            "chainId": 137,
            "address": "0x111111125421ca6dc452d289314280a0f8842a65"
          }
        ],
        "domain": {
          "name": "Permit2",
          "chainId": 137,
          "verifyingContract": "0x111111125421ca6dc452d289314280a0f8842a65"
        },
        "schemas": [
          {
            "primaryType": "Order",
            "types": {
              "EIP712Domain": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "name": "version",
                  "type": "string"
                },
                {
                  "name": "chainId",
                  "type": "uint256"
                },
                {
                  "name": "verifyingContract",
                  "type": "address"
                }
              ],
              "Order": [
                {
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "name": "maker",
                  "type": "address"
                },
                {
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "name": "makerAsset",
                  "type": "address"
                },
                {
                  "name": "takerAsset",
                  "type": "address"
                },
                {
                  "name": "makingAmount",
                  "type": "uint256"
                },
                {
                  "name": "takingAmount",
                  "type": "uint256"
                },
                {
                  "name": "makerTraits",
                  "type": "uint256"
                }
              ]
            }
          }
        ]
      }
    },
    "metadata": {
      "owner": "1inch Aggregation Router"
    },
    "display": {
      "formats": {
        "Order": {
          "intent": "1inch Order",
          "fields": [
            {
              "path": "maker",
              "label": "From",
              "format": "raw"
            },
            {
              "path": "makingAmount",
              "label": "Send Amount",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "makerAsset"
              }
            },
            {
              "path": "takingAmount",
              "label": "Receive minimum",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "takerAsset"
              }
            },
            {
              "path": "receiver",
              "label": "To",
              "format": "raw"
            }
          ]
        }
      }
    }
  }
  '''
# ---
# name: test_convert_registry_files[aave/calldata-lpv2.json]
  '''
  {
    "context": {
      "contract": {
        "deployments": [
          {
            "chainId": 1,
            "address": "0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9"
          }
        ],
        "abi": [
          {
            "type": "event",
            "name": "Borrow",
            "inputs": [
              {
                "name": "reserve",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "user",
                "type": "address",
                "internalType": "address",
                "indexed": false
              },
              {
                "name": "onBehalfOf",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "amount",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              },
              {
                "name": "borrowRateMode",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              },
              {
                "name": "borrowRate",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              },
              {
                "name": "referral",
                "type": "uint16",
                "internalType": "uint16",
                "indexed": true
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "Deposit",
            "inputs": [
              {
                "name": "reserve",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "user",
                "type": "address",
                "internalType": "address",
                "indexed": false
              },
              {
                "name": "onBehalfOf",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "amount",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              },
              {
                "name": "referral",
                "type": "uint16",
                "internalType": "uint16",
                "indexed": true
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "FlashLoan",
            "inputs": [
              {
                "name": "target",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "initiator",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "asset",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "amount",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              },
              {
                "name": "premium",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              },
              {
                "name": "referralCode",
                "type": "uint16",
                "internalType": "uint16",
                "indexed": false
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "LiquidationCall",
            "inputs": [
              {
                "name": "collateralAsset",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "debtAsset",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "user",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "debtToCover",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              },
              {
                "name": "liquidatedCollateralAmount",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              },
              {
                "name": "liquidator",
                "type": "address",
                "internalType": "address",
                "indexed": false
              },
              {
                "name": "receiveAToken",
                "type": "bool",
                "internalType": "bool",
                "indexed": false
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "Paused",
            "inputs": [],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "RebalanceStableBorrowRate",
            "inputs": [
              {
                "name": "reserve",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "user",
                "type": "address",
                "internalType": "address",
                "indexed": true
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "Repay",
            "inputs": [
              {
                "name": "reserve",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "user",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "repayer",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "amount",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "ReserveDataUpdated",
            "inputs": [
              {
                "name": "reserve",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "liquidityRate",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              },
              {
                "name": "stableBorrowRate",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              },
              {
                "name": "variableBorrowRate",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              },
              {
                "name": "liquidityIndex",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              },
              {
                "name": "variableBorrowIndex",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "ReserveUsedAsCollateralDisabled",
            "inputs": [
              {
                "name": "reserve",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "user",
                "type": "address",
                "internalType": "address",
                "indexed": true
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "ReserveUsedAsCollateralEnabled",
            "inputs": [
              {
                "name": "reserve",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "user",
                "type": "address",
                "internalType": "address",
                "indexed": true
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "Swap",
            "inputs": [
              {
                "name": "reserve",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "user",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "rateMode",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "Unpaused",
            "inputs": [],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "Withdraw",
            "inputs": [
              {
                "name": "reserve",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "user",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "to",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "amount",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              }
            ],
            "anonymous": false
          },
          {
            "type": "function",
            "name": "borrow",
            "inputs": [
              {
                "name": "asset",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "amount",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "interestRateMode",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "referralCode",
                "type": "uint16",
                "internalType": "uint16"
              },
              {
                "name": "onBehalfOf",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "deposit",
            "inputs": [
              {
                "name": "asset",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "amount",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "onBehalfOf",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "referralCode",
                "type": "uint16",
                "internalType": "uint16"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "finalizeTransfer",
            "inputs": [
              {
                "name": "asset",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "from",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "to",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "amount",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "balanceFromAfter",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "balanceToBefore",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "flashLoan",
            "inputs": [
              {
                "name": "receiverAddress",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "assets",
                "type": "address[]",
                "internalType": "address[]"
              },
              {
                "name": "amounts",
                "type": "uint256[]",
                "internalType": "uint256[]"
              },
              {
                "name": "modes",
                "type": "uint256[]",
                "internalType": "uint256[]"
              },
              {
                "name": "onBehalfOf",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "params",
                "type": "bytes",
                "internalType": "bytes"
              },
              {
                "name": "referralCode",
                "type": "uint16",
                "internalType": "uint16"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "getAddressesProvider",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "internalType": "contract ILendingPoolAddressesProvider"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "getConfiguration",
            "inputs": [
              {
                "name": "asset",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "tuple",
                "internalType": "struct DataTypes.ReserveConfigurationMap",
                "components": [
                  {
                    "name": "data",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "getReserveData",
            "inputs": [
              {
                "name": "asset",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "tuple",
                "internalType": "struct DataTypes.ReserveData",
                "components": [
                  {
                    "name": "configuration",
                    "type": "tuple",
                    "internalType": "struct DataTypes.ReserveConfigurationMap",
                    "components": [
                      {
                        "name": "data",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  },
                  {
                    "name": "liquidityIndex",
                    "type": "uint128",
                    "internalType": "uint128"
                  },
                  {
                    "name": "variableBorrowIndex",
                    "type": "uint128",
                    "internalType": "uint128"
                  },
                  {
                    "name": "currentLiquidityRate",
                    "type": "uint128",
                    "internalType": "uint128"
                  },
                  {
                    "name": "currentVariableBorrowRate",
                    "type": "uint128",
                    "internalType": "uint128"
                  },
                  {
                    "name": "currentStableBorrowRate",
                    "type": "uint128",
                    "internalType": "uint128"
                  },
                  {
                    "name": "lastUpdateTimestamp",
                    "type": "uint40",
                    "internalType": "uint40"
                  },
                  {
                    "name": "aTokenAddress",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "stableDebtTokenAddress",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "variableDebtTokenAddress",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "interestRateStrategyAddress",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "id",
                    "type": "uint8",
                    "internalType": "uint8"
                  }
                ]
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "getReserveNormalizedIncome",
            "inputs": [
              {
                "name": "asset",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "getReserveNormalizedVariableDebt",
            "inputs": [
              {
                "name": "asset",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "getReservesList",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address[]",
                "internalType": "address[]"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "getUserAccountData",
            "inputs": [
              {
                "name": "user",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [
              {
                "name": "totalCollateralETH",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "totalDebtETH",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "availableBorrowsETH",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "currentLiquidationThreshold",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "ltv",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "healthFactor",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "getUserConfiguration",
            "inputs": [
              {
                "name": "user",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "tuple",
                "internalType": "struct DataTypes.UserConfigurationMap",
                "components": [
                  {
                    "name": "data",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "initReserve",
            "inputs": [
              {
                "name": "reserve",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "aTokenAddress",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "stableDebtAddress",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "variableDebtAddress",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "interestRateStrategyAddress",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "liquidationCall",
            "inputs": [
              {
                "name": "collateralAsset",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "debtAsset",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "user",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "debtToCover",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "receiveAToken",
                "type": "bool",
                "internalType": "bool"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "paused",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bool",
                "internalType": "bool"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "rebalanceStableBorrowRate",
            "inputs": [
              {
                "name": "asset",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "user",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "repay",
            "inputs": [
              {
                "name": "asset",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "amount",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "rateMode",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "onBehalfOf",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "setConfiguration",
            "inputs": [
              {
                "name": "reserve",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "configuration",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "setPause",
            "inputs": [
              {
                "name": "val",
                "type": "bool",
                "internalType": "bool"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "setReserveInterestRateStrategyAddress",
            "inputs": [
              {
                "name": "reserve",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "rateStrategyAddress",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "setUserUseReserveAsCollateral",
            "inputs": [
              {
                "name": "asset",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "useAsCollateral",
                "type": "bool",
                "internalType": "bool"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "swapBorrowRateMode",
            "inputs": [
              {
                "name": "asset",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "rateMode",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "withdraw",
            "inputs": [
              {
                "name": "asset",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "amount",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "to",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "nonpayable"
          }
        ]
      }
    },
    "metadata": {
      "owner": "Aave",
      "info": {
        "legalName": "Aave DAO",
        "lastUpdate": "2020-11-30T09:25:48Z",
        "url": "https://aave.com/"
      },
      "constants": {
        "max": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      },
      "enums": {
        "interestRateMode": {
          "1": "stable",
          "2": "variable"
        }
      }
    },
    "display": {
      "formats": {
        "repay(address,uint256,uint256,address)": {
          "$id": "repay",
          "intent": "Repay loan",
          "required": [
            "amount",
            "rateMode",
            "onBehalfOf"
          ],
          "fields": [
            {
              "path": "amount",
              "label": "Amount to repay",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "asset",
                "threshold": "$.metadata.constants.max",
                "message": "All"
              }
            },
            {
              "path": "rateMode",
              "label": "Interest rate mode",
              "format": "enum",
              "params": {
                "$ref": "$.metadata.enums.interestRateMode"
              }
            },
            {
              "path": "onBehalfOf",
              "label": "For debt holder",
              "format": "addressName"
            }
          ]
        },
        "setUserUseReserveAsCollateral(address,bool)": {
          "intent": "Manage collateral",
          "required": [
            "asset",
            "useAsCollateral"
          ],
          "fields": [
            {
              "path": "asset",
              "label": "For asset",
              "format": "addressName",
              "params": {
                "type": "token"
              }
            },
            {
              "path": "useAsCollateral",
              "label": "Enable use as collateral",
              "format": "raw"
            }
          ]
        },
        "withdraw(address,uint256,address)": {
          "intent": "Withdraw",
          "required": [
            "amount",
            "to"
          ],
          "fields": [
            {
              "path": "amount",
              "label": "Amount to withdraw",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "asset",
                "threshold": "$.metadata.constants.max",
                "message": "Max"
              }
            },
            {
              "path": "to",
              "label": "To recipient",
              "format": "addressName"
            }
          ]
        },
        "swapBorrowRateMode(address,uint256)": {
          "intent": "Swap interest rate mode",
          "required": [
            "asset",
            "rateMode"
          ],
          "fields": [
            {
              "path": "asset",
              "label": "For asset",
              "format": "addressName",
              "params": {
                "type": "token"
              }
            },
            {
              "path": "rateMode",
              "label": "Set interest rate mode to",
              "format": "enum",
              "params": {
                "$ref": "$.metadata.enums.interestRateMode"
              }
            }
          ]
        },
        "borrow(address,uint256,uint256,uint16,address)": {
          "intent": "Borrow",
          "required": [
            "amount",
            "onBehalfOf",
            "interestRateMode"
          ],
          "fields": [
            {
              "path": "amount",
              "label": "Amount to borrow",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "asset"
              }
            },
            {
              "path": "interestRateMode",
              "label": "Interest Rate mode",
              "format": "enum",
              "params": {
                "$ref": "$.metadata.enums.interestRateMode"
              }
            },
            {
              "path": "onBehalfOf",
              "label": "Debtor",
              "format": "addressName"
            }
          ]
        },
        "deposit(address,uint256,address,uint16)": {
          "$id": "deposit",
          "intent": "Supply",
          "required": [
            "amount",
            "onBehalfOf"
          ],
          "fields": [
            {
              "path": "amount",
              "label": "Amount to supply",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "asset"
              }
            },
            {
              "path": "onBehalfOf",
              "label": "Collateral recipient",
              "format": "addressName"
            }
          ]
        }
      }
    }
  }
  '''
# ---
# name: test_convert_registry_files[degate/eip712-degate.json]
  '''
  {
    "context": {
      "eip712": {
        "deployments": [
          {
            "chainId": 1,
            "address": "0xe63602a9b3dfe983187525ac985fec4f57b24ed5"
          }
        ],
        "domain": {
          "name": "DeGate",
          "chainId": 1,
          "verifyingContract": "0xe63602a9b3dfe983187525ac985fec4f57b24ed5"
        },
        "schemas": [
          {
            "primaryType": "AccountUpdate",
            "types": {
              "AccountUpdate": [
                {
                  "name": "owner",
                  "type": "address"
                },
                {
                  "name": "accountID",
                  "type": "uint32"
                },
                {
                  "name": "feeTokenID",
                  "type": "uint32"
                },
                {
                  "name": "maxFee",
                  "type": "uint96"
                },
                {
                  "name": "publicKey",
                  "type": "uint256"
                },
                {
                  "name": "validUntil",
                  "type": "uint32"
                },
                {
                  "name": "nonce",
                  "type": "uint32"
                }
              ],
              "EIP712Domain": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "name": "version",
                  "type": "string"
                },
                {
                  "name": "chainId",
                  "type": "uint256"
                },
                {
                  "name": "verifyingContract",
                  "type": "address"
                }
              ]
            }
          },
          {
            "primaryType": "Withdrawal",
            "types": {
              "EIP712Domain": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "name": "version",
                  "type": "string"
                },
                {
                  "name": "chainId",
                  "type": "uint256"
                },
                {
                  "name": "verifyingContract",
                  "type": "address"
                }
              ],
              "Withdrawal": [
                {
                  "name": "owner",
                  "type": "address"
                },
                {
                  "name": "accountID",
                  "type": "uint32"
                },
                {
                  "name": "tokenID",
                  "type": "uint32"
                },
                {
                  "name": "amount",
                  "type": "uint248"
                },
                {
                  "name": "feeTokenID",
                  "type": "uint32"
                },
                {
                  "name": "maxFee",
                  "type": "uint96"
                },
                {
                  "name": "to",
                  "type": "address"
                },
                {
                  "name": "minGas",
                  "type": "uint248"
                },
                {
                  "name": "validUntil",
                  "type": "uint32"
                },
                {
                  "name": "storageID",
                  "type": "uint32"
                }
              ]
            }
          },
          {
            "primaryType": "Transfer",
            "types": {
              "EIP712Domain": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "name": "version",
                  "type": "string"
                },
                {
                  "name": "chainId",
                  "type": "uint256"
                },
                {
                  "name": "verifyingContract",
                  "type": "address"
                }
              ],
              "Transfer": [
                {
                  "name": "owner",
                  "type": "address"
                },
                {
                  "name": "accountID",
                  "type": "uint32"
                },
                {
                  "name": "tokenID",
                  "type": "uint32"
                },
                {
                  "name": "amount",
                  "type": "uint248"
                },
                {
                  "name": "feeTokenID",
                  "type": "uint32"
                },
                {
                  "name": "maxFee",
                  "type": "uint96"
                },
                {
                  "name": "to",
                  "type": "address"
                },
                {
                  "name": "validUntil",
                  "type": "uint32"
                },
                {
                  "name": "storageID",
                  "type": "uint32"
                }
              ]
            }
          }
        ]
      }
    },
    "metadata": {
      "owner": "DeGate Exchange Contract"
    },
    "display": {
      "formats": {
        "AccountUpdate": {
          "intent": "DeGate AccountUpdate",
          "fields": [
            {
              "path": "owner",
              "label": "Owner",
              "format": "raw"
            },
            {
              "path": "accountID",
              "label": "AccountID",
              "format": "raw"
            },
            {
              "path": "feeTokenID",
              "label": "FeeTokenID",
              "format": "raw"
            },
            {
              "path": "maxFee",
              "label": "MaxFee",
              "format": "raw"
            },
            {
              "path": "publicKey",
              "label": "PublicKey",
              "format": "raw"
            },
            {
              "path": "validUntil",
              "label": "ValidUntil",
              "format": "raw"
            },
            {
              "path": "nonce",
              "label": "Nonce",
              "format": "raw"
            }
          ]
        },
        "Withdrawal": {
          "intent": "DeGate Withdrawal",
          "fields": [
            {
              "path": "owner",
              "label": "Owner",
              "format": "raw"
            },
            {
              "path": "accountID",
              "label": "AccountID",
              "format": "raw"
            },
            {
              "path": "tokenID",
              "label": "TokenID",
              "format": "raw"
            },
            {
              "path": "amount",
              "label": "Amount",
              "format": "raw"
            },
            {
              "path": "feeTokenID",
              "label": "FeeTokenID",
              "format": "raw"
            },
            {
              "path": "maxFee",
              "label": "MaxFee",
              "format": "raw"
            },
            {
              "path": "to",
              "label": "To",
              "format": "raw"
            },
            {
              "path": "minGas",
              "label": "MinGas",
              "format": "raw"
            },
            {
              "path": "validUntil",
              "label": "ValidUntil",
              "format": "raw"
            },
            {
              "path": "storageID",
              "label": "StorageID",
              "format": "raw"
            }
          ]
        },
        "Transfer": {
          "intent": "DeGate Transfer",
          "fields": [
            {
              "path": "owner",
              "label": "Owner",
              "format": "raw"
            },
            {
              "path": "accountID",
              "label": "AccountID",
              "format": "raw"
            },
            {
              "path": "tokenID",
              "label": "TokenID",
              "format": "raw"
            },
            {
              "path": "amount",
              "label": "Amount",
              "format": "raw"
            },
            {
              "path": "feeTokenID",
              "label": "FeeTokenID",
              "format": "raw"
            },
            {
              "path": "maxFee",
              "label": "MaxFee",
              "format": "raw"
            },
            {
              "path": "to",
              "label": "To",
              "format": "raw"
            },
            {
              "path": "validUntil",
              "label": "ValidUntil",
              "format": "raw"
            },
            {
              "path": "storageID",
              "label": "StorageID",
              "format": "raw"
            }
          ]
        }
      }
    }
  }
  '''
# ---
# name: test_convert_registry_files[lido/calldata-stETH.json]
  '''
  {
    "context": {
      "contract": {
        "deployments": [
          {
            "chainId": 1,
            "address": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84"
          }
        ],
        "abi": [
          {
            "type": "function",
            "name": "resume",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable",
            "constant": false,
            "payable": false
          },
          {
            "type": "function",
            "name": "name",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "pure",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "stop",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable",
            "constant": false,
            "payable": false
          },
          {
            "type": "function",
            "name": "hasInitialized",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "approve",
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "constant": false,
            "payable": false
          },
          {
            "type": "function",
            "name": "initialize",
            "inputs": [
              {
                "name": "depositContract",
                "type": "address"
              },
              {
                "name": "_oracle",
                "type": "address"
              },
              {
                "name": "_operators",
                "type": "address"
              },
              {
                "name": "_treasury",
                "type": "address"
              },
              {
                "name": "_insuranceFund",
                "type": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
            "constant": false,
            "payable": false
          },
          {
            "type": "function",
            "name": "getInsuranceFund",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "totalSupply",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "getSharesByPooledEth",
            "inputs": [
              {
                "name": "_ethAmount",
                "type": "uint256"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "transferFrom",
            "inputs": [
              {
                "name": "_sender",
                "type": "address"
              },
              {
                "name": "_recipient",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "constant": false,
            "payable": false
          },
          {
            "type": "function",
            "name": "getOperators",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "getEVMScriptExecutor",
            "inputs": [
              {
                "name": "_script",
                "type": "bytes"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "decimals",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "pure",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "getRecoveryVault",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "DEPOSIT_ROLE",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "DEPOSIT_SIZE",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "getTotalPooledEther",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "PAUSE_ROLE",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "increaseAllowance",
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_addedValue",
                "type": "uint256"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "constant": false,
            "payable": false
          },
          {
            "type": "function",
            "name": "getTreasury",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "SET_ORACLE",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "isStopped",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "MANAGE_WITHDRAWAL_KEY",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "getBufferedEther",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "SIGNATURE_LENGTH",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "getWithdrawalCredentials",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "balanceOf",
            "inputs": [
              {
                "name": "_account",
                "type": "address"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "getFeeDistribution",
            "inputs": [],
            "outputs": [
              {
                "name": "treasuryFeeBasisPoints",
                "type": "uint16"
              },
              {
                "name": "insuranceFeeBasisPoints",
                "type": "uint16"
              },
              {
                "name": "operatorsFeeBasisPoints",
                "type": "uint16"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "getPooledEthByShares",
            "inputs": [
              {
                "name": "_sharesAmount",
                "type": "uint256"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "setOracle",
            "inputs": [
              {
                "name": "_oracle",
                "type": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
            "constant": false,
            "payable": false
          },
          {
            "type": "function",
            "name": "allowRecoverability",
            "inputs": [
              {
                "name": "token",
                "type": "address"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "appId",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "getOracle",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "getInitializationBlock",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "setFeeDistribution",
            "inputs": [
              {
                "name": "_treasuryFeeBasisPoints",
                "type": "uint16"
              },
              {
                "name": "_insuranceFeeBasisPoints",
                "type": "uint16"
              },
              {
                "name": "_operatorsFeeBasisPoints",
                "type": "uint16"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
            "constant": false,
            "payable": false
          },
          {
            "type": "function",
            "name": "setFee",
            "inputs": [
              {
                "name": "_feeBasisPoints",
                "type": "uint16"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
            "constant": false,
            "payable": false
          },
          {
            "type": "function",
            "name": "depositBufferedEther",
            "inputs": [
              {
                "name": "_maxDeposits",
                "type": "uint256"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
            "constant": false,
            "payable": false
          },
          {
            "type": "function",
            "name": "symbol",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "pure",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "MANAGE_FEE",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "transferToVault",
            "inputs": [
              {
                "name": "_token",
                "type": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
            "constant": false,
            "payable": false
          },
          {
            "type": "function",
            "name": "SET_TREASURY",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "canPerform",
            "inputs": [
              {
                "name": "_sender",
                "type": "address"
              },
              {
                "name": "_role",
                "type": "bytes32"
              },
              {
                "name": "_params",
                "type": "uint256[]"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "submit",
            "inputs": [
              {
                "name": "_referral",
                "type": "address"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "payable",
            "constant": false,
            "payable": true
          },
          {
            "type": "function",
            "name": "WITHDRAWAL_CREDENTIALS_LENGTH",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "decreaseAllowance",
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_subtractedValue",
                "type": "uint256"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "constant": false,
            "payable": false
          },
          {
            "type": "function",
            "name": "getEVMScriptRegistry",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "PUBKEY_LENGTH",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "withdraw",
            "inputs": [
              {
                "name": "_amount",
                "type": "uint256"
              },
              {
                "name": "_pubkeyHash",
                "type": "bytes32"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
            "constant": false,
            "payable": false
          },
          {
            "type": "function",
            "name": "transfer",
            "inputs": [
              {
                "name": "_recipient",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "constant": false,
            "payable": false
          },
          {
            "type": "function",
            "name": "getDepositContract",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "getBeaconStat",
            "inputs": [],
            "outputs": [
              {
                "name": "depositedValidators",
                "type": "uint256"
              },
              {
                "name": "beaconValidators",
                "type": "uint256"
              },
              {
                "name": "beaconBalance",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "BURN_ROLE",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "setInsuranceFund",
            "inputs": [
              {
                "name": "_insuranceFund",
                "type": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
            "constant": false,
            "payable": false
          },
          {
            "type": "function",
            "name": "getFee",
            "inputs": [],
            "outputs": [
              {
                "name": "feeBasisPoints",
                "type": "uint16"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "SET_INSURANCE_FUND",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "kernel",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "getTotalShares",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "allowance",
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_spender",
                "type": "address"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "isPetrified",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "function",
            "name": "setWithdrawalCredentials",
            "inputs": [
              {
                "name": "_withdrawalCredentials",
                "type": "bytes32"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
            "constant": false,
            "payable": false
          },
          {
            "type": "function",
            "name": "depositBufferedEther",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable",
            "constant": false,
            "payable": false
          },
          {
            "type": "function",
            "name": "burnShares",
            "inputs": [
              {
                "name": "_account",
                "type": "address"
              },
              {
                "name": "_sharesAmount",
                "type": "uint256"
              }
            ],
            "outputs": [
              {
                "name": "newTotalShares",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "constant": false,
            "payable": false
          },
          {
            "type": "function",
            "name": "setTreasury",
            "inputs": [
              {
                "name": "_treasury",
                "type": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
            "constant": false,
            "payable": false
          },
          {
            "type": "function",
            "name": "pushBeacon",
            "inputs": [
              {
                "name": "_beaconValidators",
                "type": "uint256"
              },
              {
                "name": "_beaconBalance",
                "type": "uint256"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
            "constant": false,
            "payable": false
          },
          {
            "type": "function",
            "name": "sharesOf",
            "inputs": [
              {
                "name": "_account",
                "type": "address"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "constant": true,
            "payable": false
          },
          {
            "type": "fallback",
            "stateMutability": "payable",
            "payable": true
          },
          {
            "type": "event",
            "name": "ScriptResult",
            "inputs": [
              {
                "name": "executor",
                "type": "address",
                "indexed": true
              },
              {
                "name": "script",
                "type": "bytes",
                "indexed": false
              },
              {
                "name": "input",
                "type": "bytes",
                "indexed": false
              },
              {
                "name": "returnData",
                "type": "bytes",
                "indexed": false
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "RecoverToVault",
            "inputs": [
              {
                "name": "vault",
                "type": "address",
                "indexed": true
              },
              {
                "name": "token",
                "type": "address",
                "indexed": true
              },
              {
                "name": "amount",
                "type": "uint256",
                "indexed": false
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "Stopped",
            "inputs": [],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "Resumed",
            "inputs": [],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "Transfer",
            "inputs": [
              {
                "name": "from",
                "type": "address",
                "indexed": true
              },
              {
                "name": "to",
                "type": "address",
                "indexed": true
              },
              {
                "name": "value",
                "type": "uint256",
                "indexed": false
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "Approval",
            "inputs": [
              {
                "name": "owner",
                "type": "address",
                "indexed": true
              },
              {
                "name": "spender",
                "type": "address",
                "indexed": true
              },
              {
                "name": "value",
                "type": "uint256",
                "indexed": false
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "FeeSet",
            "inputs": [
              {
                "name": "feeBasisPoints",
                "type": "uint16",
                "indexed": false
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "FeeDistributionSet",
            "inputs": [
              {
                "name": "treasuryFeeBasisPoints",
                "type": "uint16",
                "indexed": false
              },
              {
                "name": "insuranceFeeBasisPoints",
                "type": "uint16",
                "indexed": false
              },
              {
                "name": "operatorsFeeBasisPoints",
                "type": "uint16",
                "indexed": false
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "WithdrawalCredentialsSet",
            "inputs": [
              {
                "name": "withdrawalCredentials",
                "type": "bytes32",
                "indexed": false
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "Submitted",
            "inputs": [
              {
                "name": "sender",
                "type": "address",
                "indexed": true
              },
              {
                "name": "amount",
                "type": "uint256",
                "indexed": false
              },
              {
                "name": "referral",
                "type": "address",
                "indexed": false
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "Unbuffered",
            "inputs": [
              {
                "name": "amount",
                "type": "uint256",
                "indexed": false
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "Withdrawal",
            "inputs": [
              {
                "name": "sender",
                "type": "address",
                "indexed": true
              },
              {
                "name": "tokenAmount",
                "type": "uint256",
                "indexed": false
              },
              {
                "name": "sentFromBuffer",
                "type": "uint256",
                "indexed": false
              },
              {
                "name": "pubkeyHash",
                "type": "bytes32",
                "indexed": true
              },
              {
                "name": "etherAmount",
                "type": "uint256",
                "indexed": false
              }
            ],
            "anonymous": false
          }
        ]
      }
    },
    "metadata": {
      "owner": "Lido",
      "info": {
        "legalName": "Lido DAO",
        "lastUpdate": "2021-02-19T04:37:20Z",
        "url": "https://lido.fi/"
      }
    },
    "display": {
      "formats": {
        "submit(address)": {
          "intent": "Stake ETH",
          "required": [
            "@.amount"
          ],
          "fields": [
            {
              "path": "@.amount",
              "label": "Amount to Stake",
              "format": "amount"
            },
            {
              "path": "_referral",
              "label": "Referral",
              "format": "addressName"
            }
          ]
        },
        "approve(address,uint256)": {
          "intent": "Approve a spender",
          "required": [
            "_spender",
            "_amount"
          ],
          "fields": [
            {
              "path": "_spender",
              "label": "Spender",
              "format": "addressName"
            },
            {
              "path": "_amount",
              "label": "Max spending amount",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "@.to"
              }
            }
          ]
        }
      }
    }
  }
  '''
# ---
# name: test_convert_registry_files[lido/calldata-wstETH.json]
  '''
  {
    "context": {
      "contract": {
        "deployments": [
          {
            "chainId": 1,
            "address": "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"
          }
        ],
        "abi": [
          {
            "type": "constructor",
            "inputs": [
              {
                "name": "_stETH",
                "type": "address",
                "internalType": "contract IStETH"
              }
            ],
            "stateMutability": "nonpayable"
          },
          {
            "type": "event",
            "name": "Approval",
            "inputs": [
              {
                "name": "owner",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "spender",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "value",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "Transfer",
            "inputs": [
              {
                "name": "from",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "to",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "value",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              }
            ],
            "anonymous": false
          },
          {
            "type": "function",
            "name": "DOMAIN_SEPARATOR",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bytes32",
                "internalType": "bytes32"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "allowance",
            "inputs": [
              {
                "name": "owner",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "spender",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "approve",
            "inputs": [
              {
                "name": "spender",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "amount",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool",
                "internalType": "bool"
              }
            ],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "balanceOf",
            "inputs": [
              {
                "name": "account",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "decimals",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint8",
                "internalType": "uint8"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "decreaseAllowance",
            "inputs": [
              {
                "name": "spender",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "subtractedValue",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool",
                "internalType": "bool"
              }
            ],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "getStETHByWstETH",
            "inputs": [
              {
                "name": "_wstETHAmount",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "getWstETHByStETH",
            "inputs": [
              {
                "name": "_stETHAmount",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "increaseAllowance",
            "inputs": [
              {
                "name": "spender",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "addedValue",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool",
                "internalType": "bool"
              }
            ],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "name",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "string",
                "internalType": "string"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "nonces",
            "inputs": [
              {
                "name": "owner",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "permit",
            "inputs": [
              {
                "name": "owner",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "spender",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "value",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "deadline",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "v",
                "type": "uint8",
                "internalType": "uint8"
              },
              {
                "name": "r",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "s",
                "type": "bytes32",
                "internalType": "bytes32"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "stETH",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "internalType": "contract IStETH"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "stEthPerToken",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "symbol",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "string",
                "internalType": "string"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "tokensPerStEth",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "totalSupply",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "transfer",
            "inputs": [
              {
                "name": "recipient",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "amount",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool",
                "internalType": "bool"
              }
            ],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "transferFrom",
            "inputs": [
              {
                "name": "sender",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "recipient",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "amount",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool",
                "internalType": "bool"
              }
            ],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "unwrap",
            "inputs": [
              {
                "name": "_wstETHAmount",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "wrap",
            "inputs": [
              {
                "name": "_stETHAmount",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "nonpayable"
          },
          {
            "type": "receive",
            "stateMutability": "payable"
          }
        ]
      }
    },
    "metadata": {
      "owner": "Lido",
      "info": {
        "legalName": "Lido DAO",
        "lastUpdate": "2021-02-19T04:37:20Z",
        "url": "https://lido.fi/"
      },
      "constants": {
        "stETHaddress": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84"
      }
    },
    "display": {
      "formats": {
        "wrap(uint256)": {
          "intent": "Exchange stETH to wstETH",
          "fields": [
            {
              "path": "_stETHAmount",
              "label": "Amount to exchange",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "$.metadata.constants.stETHaddress"
              }
            }
          ]
        },
        "unwrap(uint256)": {
          "intent": "Exchange wstETH to stETH",
          "fields": [
            {
              "path": "_wstETHAmount",
              "label": "Amount to exchange",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "@.to"
              }
            }
          ]
        },
        "approve(address,uint256)": {
          "intent": "Approve spender",
          "fields": [
            {
              "path": "spender",
              "label": "Spender",
              "format": "addressName"
            },
            {
              "path": "amount",
              "label": "Max spending amount",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "@.to"
              }
            }
          ]
        }
      }
    }
  }
  '''
# ---
# name: test_convert_registry_files[makerdao/eip712-permit-DAI.json]
  '''
  {
    "context": {
      "eip712": {
        "deployments": [
          {
            "chainId": 42,
            "address": "0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa"
          }
        ],
        "domain": {
          "name": "Dai Stablecoin",
          "version": "1"
        },
        "schemas": [
          {
            "primaryType": "Permit",
            "types": {
              "EIP712Domain": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "name": "version",
                  "type": "string"
                },
                {
                  "name": "chainId",
                  "type": "uint256"
                },
                {
                  "name": "verifyingContract",
                  "type": "address"
                }
              ],
              "Permit": [
                {
                  "name": "owner",
                  "type": "address"
                },
                {
                  "name": "spender",
                  "type": "address"
                },
                {
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "deadline",
                  "type": "uint256"
                }
              ]
            }
          }
        ]
      }
    },
    "metadata": {
      "owner": "MakerDAO",
      "info": {
        "legalName": "Maker Foundation",
        "lastUpdate": "2017-12-18T00:00:00Z",
        "url": "https://makerdao.com/"
      },
      "token": {
        "name": "Dai Stablecoin",
        "ticker": "DAI",
        "decimals": 18
      }
    },
    "display": {
      "formats": {
        "Permit": {
          "intent": "Authorize spending of tokens",
          "required": [
            "spender",
            "value"
          ],
          "screens": {
            "stax": [
              {
                "type": "propertyPage",
                "label": "DAI Permit",
                "content": [
                  "spender",
                  "value",
                  "deadline"
                ]
              }
            ]
          },
          "fields": [
            {
              "path": "spender",
              "label": "Spender",
              "format": "addressName"
            },
            {
              "path": "value",
              "label": "Max spending amount",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "@.to"
              }
            },
            {
              "path": "deadline",
              "label": "Valid until",
              "format": "date",
              "params": {
                "encoding": "timestamp"
              }
            }
          ]
        }
      }
    }
  }
  '''
# ---
# name: test_convert_registry_files[paraswap/calldata-AugustusSwapper.json]
  '''
  {
    "context": {
      "contract": {
        "deployments": [
          {
            "chainId": 1,
            "address": "0xDEF171Fe48CF0115B1d80b88dc8eAB59176FEe57"
          }
        ],
        "abi": [
          {
            "type": "constructor",
            "inputs": [
              {
                "name": "_feeWallet",
                "type": "address",
                "internalType": "address payable"
              }
            ],
            "stateMutability": "nonpayable"
          },
          {
            "type": "event",
            "name": "AdapterInitialized",
            "inputs": [
              {
                "name": "adapter",
                "type": "address",
                "internalType": "address",
                "indexed": true
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "RoleAdminChanged",
            "inputs": [
              {
                "name": "role",
                "type": "bytes32",
                "internalType": "bytes32",
                "indexed": true
              },
              {
                "name": "previousAdminRole",
                "type": "bytes32",
                "internalType": "bytes32",
                "indexed": true
              },
              {
                "name": "newAdminRole",
                "type": "bytes32",
                "internalType": "bytes32",
                "indexed": true
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "RoleGranted",
            "inputs": [
              {
                "name": "role",
                "type": "bytes32",
                "internalType": "bytes32",
                "indexed": true
              },
              {
                "name": "account",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "sender",
                "type": "address",
                "internalType": "address",
                "indexed": true
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "RoleRevoked",
            "inputs": [
              {
                "name": "role",
                "type": "bytes32",
                "internalType": "bytes32",
                "indexed": true
              },
              {
                "name": "account",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "sender",
                "type": "address",
                "internalType": "address",
                "indexed": true
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "RouterInitialized",
            "inputs": [
              {
                "name": "router",
                "type": "address",
                "internalType": "address",
                "indexed": true
              }
            ],
            "anonymous": false
          },
          {
            "type": "fallback",
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "DEFAULT_ADMIN_ROLE",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bytes32",
                "internalType": "bytes32"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "ROUTER_ROLE",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bytes32",
                "internalType": "bytes32"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "WHITELISTED_ROLE",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bytes32",
                "internalType": "bytes32"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "getAdapterData",
            "inputs": [
              {
                "name": "key",
                "type": "bytes32",
                "internalType": "bytes32"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bytes",
                "internalType": "bytes"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "getFeeWallet",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "internalType": "address"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "getImplementation",
            "inputs": [
              {
                "name": "selector",
                "type": "bytes4",
                "internalType": "bytes4"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "internalType": "address"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "getPartnerFeeStructure",
            "inputs": [
              {
                "name": "partner",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "tuple",
                "internalType": "struct AugustusStorage.FeeStructure",
                "components": [
                  {
                    "name": "partnerShare",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "noPositiveSlippage",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "positiveSlippageToUser",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "feePercent",
                    "type": "uint16",
                    "internalType": "uint16"
                  },
                  {
                    "name": "partnerId",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ]
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "getRoleAdmin",
            "inputs": [
              {
                "name": "role",
                "type": "bytes32",
                "internalType": "bytes32"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bytes32",
                "internalType": "bytes32"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "getRoleMember",
            "inputs": [
              {
                "name": "role",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "index",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "internalType": "address"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "getRoleMemberCount",
            "inputs": [
              {
                "name": "role",
                "type": "bytes32",
                "internalType": "bytes32"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "getRouterData",
            "inputs": [
              {
                "name": "key",
                "type": "bytes32",
                "internalType": "bytes32"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bytes",
                "internalType": "bytes"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "getTokenTransferProxy",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "internalType": "address"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "getVersion",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "string",
                "internalType": "string"
              }
            ],
            "stateMutability": "pure"
          },
          {
            "type": "function",
            "name": "grantRole",
            "inputs": [
              {
                "name": "role",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "account",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "hasRole",
            "inputs": [
              {
                "name": "role",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "account",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool",
                "internalType": "bool"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "initializeAdapter",
            "inputs": [
              {
                "name": "adapter",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "data",
                "type": "bytes",
                "internalType": "bytes"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "initializeRouter",
            "inputs": [
              {
                "name": "router",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "data",
                "type": "bytes",
                "internalType": "bytes"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "isAdapterInitialized",
            "inputs": [
              {
                "name": "key",
                "type": "bytes32",
                "internalType": "bytes32"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool",
                "internalType": "bool"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "isRouterInitialized",
            "inputs": [
              {
                "name": "key",
                "type": "bytes32",
                "internalType": "bytes32"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool",
                "internalType": "bool"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "registerPartner",
            "inputs": [
              {
                "name": "partner",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "_partnerShare",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "_noPositiveSlippage",
                "type": "bool",
                "internalType": "bool"
              },
              {
                "name": "_positiveSlippageToUser",
                "type": "bool",
                "internalType": "bool"
              },
              {
                "name": "_feePercent",
                "type": "uint16",
                "internalType": "uint16"
              },
              {
                "name": "partnerId",
                "type": "string",
                "internalType": "string"
              },
              {
                "name": "_data",
                "type": "bytes",
                "internalType": "bytes"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "renounceRole",
            "inputs": [
              {
                "name": "role",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "account",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "revokeRole",
            "inputs": [
              {
                "name": "role",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "account",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "setFeeWallet",
            "inputs": [
              {
                "name": "_feeWallet",
                "type": "address",
                "internalType": "address payable"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "setImplementation",
            "inputs": [
              {
                "name": "selector",
                "type": "bytes4",
                "internalType": "bytes4"
              },
              {
                "name": "implementation",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "transferTokens",
            "inputs": [
              {
                "name": "token",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "destination",
                "type": "address",
                "internalType": "address payable"
              },
              {
                "name": "amount",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "receive",
            "stateMutability": "payable"
          },
          {
            "type": "event",
            "name": "Bought",
            "inputs": [
              {
                "name": "uuid",
                "type": "bytes16",
                "internalType": "bytes16",
                "indexed": false
              },
              {
                "name": "initiator",
                "type": "address",
                "internalType": "address",
                "indexed": false
              },
              {
                "name": "beneficiary",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "srcToken",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "destToken",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "srcAmount",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              },
              {
                "name": "receivedAmount",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "FeeTaken",
            "inputs": [
              {
                "name": "fee",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              },
              {
                "name": "partnerShare",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              },
              {
                "name": "paraswapShare",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              }
            ],
            "anonymous": false
          },
          {
            "type": "event",
            "name": "Swapped",
            "inputs": [
              {
                "name": "uuid",
                "type": "bytes16",
                "internalType": "bytes16",
                "indexed": false
              },
              {
                "name": "initiator",
                "type": "address",
                "internalType": "address",
                "indexed": false
              },
              {
                "name": "beneficiary",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "srcToken",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "destToken",
                "type": "address",
                "internalType": "address",
                "indexed": true
              },
              {
                "name": "srcAmount",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              },
              {
                "name": "receivedAmount",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              },
              {
                "name": "expectedAmount",
                "type": "uint256",
                "internalType": "uint256",
                "indexed": false
              }
            ],
            "anonymous": false
          },
          {
            "type": "function",
            "name": "buyOnUniswap",
            "inputs": [
              {
                "name": "amountInMax",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "amountOut",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "path",
                "type": "address[]",
                "internalType": "address[]"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "buyOnUniswapFork",
            "inputs": [
              {
                "name": "factory",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "initCode",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "amountInMax",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "amountOut",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "path",
                "type": "address[]",
                "internalType": "address[]"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "buyOnUniswapV2Fork",
            "inputs": [
              {
                "name": "tokenIn",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "amountInMax",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "amountOut",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "weth",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "pools",
                "type": "uint256[]",
                "internalType": "uint256[]"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "buyOnUniswapV2ForkWithPermit",
            "inputs": [
              {
                "name": "tokenIn",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "amountInMax",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "amountOut",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "weth",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "pools",
                "type": "uint256[]",
                "internalType": "uint256[]"
              },
              {
                "name": "permit",
                "type": "bytes",
                "internalType": "bytes"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "megaSwap",
            "inputs": [
              {
                "name": "data",
                "type": "tuple",
                "internalType": "struct Utils.MegaSwapSellData",
                "components": [
                  {
                    "name": "fromToken",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "fromAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "toAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "expectedAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "beneficiary",
                    "type": "address",
                    "internalType": "address payable"
                  },
                  {
                    "name": "path",
                    "type": "tuple[]",
                    "internalType": "struct Utils.MegaSwapPath[]",
                    "components": [
                      {
                        "name": "fromAmountPercent",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "path",
                        "type": "tuple[]",
                        "internalType": "struct Utils.Path[]",
                        "components": [
                          {
                            "name": "to",
                            "type": "address",
                            "internalType": "address"
                          },
                          {
                            "name": "totalNetworkFee",
                            "type": "uint256",
                            "internalType": "uint256"
                          },
                          {
                            "name": "adapters",
                            "type": "tuple[]",
                            "internalType": "struct Utils.Adapter[]",
                            "components": [
                              {
                                "name": "adapter",
                                "type": "address",
                                "internalType": "address payable"
                              },
                              {
                                "name": "percent",
                                "type": "uint256",
                                "internalType": "uint256"
                              },
                              {
                                "name": "networkFee",
                                "type": "uint256",
                                "internalType": "uint256"
                              },
                              {
                                "name": "route",
                                "type": "tuple[]",
                                "internalType": "struct Utils.Route[]",
                                "components": [
                                  {
                                    "name": "index",
                                    "type": "uint256",
                                    "internalType": "uint256"
                                  },
                                  {
                                    "name": "targetExchange",
                                    "type": "address",
                                    "internalType": "address"
                                  },
                                  {
                                    "name": "percent",
                                    "type": "uint256",
                                    "internalType": "uint256"
                                  },
                                  {
                                    "name": "payload",
                                    "type": "bytes",
                                    "internalType": "bytes"
                                  },
                                  {
                                    "name": "networkFee",
                                    "type": "uint256",
                                    "internalType": "uint256"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "partner",
                    "type": "address",
                    "internalType": "address payable"
                  },
                  {
                    "name": "feePercent",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "permit",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "deadline",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "uuid",
                    "type": "bytes16",
                    "internalType": "bytes16"
                  }
                ]
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "multiSwap",
            "inputs": [
              {
                "name": "data",
                "type": "tuple",
                "internalType": "struct Utils.SellData",
                "components": [
                  {
                    "name": "fromToken",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "fromAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "toAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "expectedAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "beneficiary",
                    "type": "address",
                    "internalType": "address payable"
                  },
                  {
                    "name": "path",
                    "type": "tuple[]",
                    "internalType": "struct Utils.Path[]",
                    "components": [
                      {
                        "name": "to",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "totalNetworkFee",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "adapters",
                        "type": "tuple[]",
                        "internalType": "struct Utils.Adapter[]",
                        "components": [
                          {
                            "name": "adapter",
                            "type": "address",
                            "internalType": "address payable"
                          },
                          {
                            "name": "percent",
                            "type": "uint256",
                            "internalType": "uint256"
                          },
                          {
                            "name": "networkFee",
                            "type": "uint256",
                            "internalType": "uint256"
                          },
                          {
                            "name": "route",
                            "type": "tuple[]",
                            "internalType": "struct Utils.Route[]",
                            "components": [
                              {
                                "name": "index",
                                "type": "uint256",
                                "internalType": "uint256"
                              },
                              {
                                "name": "targetExchange",
                                "type": "address",
                                "internalType": "address"
                              },
                              {
                                "name": "percent",
                                "type": "uint256",
                                "internalType": "uint256"
                              },
                              {
                                "name": "payload",
                                "type": "bytes",
                                "internalType": "bytes"
                              },
                              {
                                "name": "networkFee",
                                "type": "uint256",
                                "internalType": "uint256"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "partner",
                    "type": "address",
                    "internalType": "address payable"
                  },
                  {
                    "name": "feePercent",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "permit",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "deadline",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "uuid",
                    "type": "bytes16",
                    "internalType": "bytes16"
                  }
                ]
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "protectedMegaSwap",
            "inputs": [
              {
                "name": "data",
                "type": "tuple",
                "internalType": "struct Utils.MegaSwapSellData",
                "components": [
                  {
                    "name": "fromToken",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "fromAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "toAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "expectedAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "beneficiary",
                    "type": "address",
                    "internalType": "address payable"
                  },
                  {
                    "name": "path",
                    "type": "tuple[]",
                    "internalType": "struct Utils.MegaSwapPath[]",
                    "components": [
                      {
                        "name": "fromAmountPercent",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "path",
                        "type": "tuple[]",
                        "internalType": "struct Utils.Path[]",
                        "components": [
                          {
                            "name": "to",
                            "type": "address",
                            "internalType": "address"
                          },
                          {
                            "name": "totalNetworkFee",
                            "type": "uint256",
                            "internalType": "uint256"
                          },
                          {
                            "name": "adapters",
                            "type": "tuple[]",
                            "internalType": "struct Utils.Adapter[]",
                            "components": [
                              {
                                "name": "adapter",
                                "type": "address",
                                "internalType": "address payable"
                              },
                              {
                                "name": "percent",
                                "type": "uint256",
                                "internalType": "uint256"
                              },
                              {
                                "name": "networkFee",
                                "type": "uint256",
                                "internalType": "uint256"
                              },
                              {
                                "name": "route",
                                "type": "tuple[]",
                                "internalType": "struct Utils.Route[]",
                                "components": [
                                  {
                                    "name": "index",
                                    "type": "uint256",
                                    "internalType": "uint256"
                                  },
                                  {
                                    "name": "targetExchange",
                                    "type": "address",
                                    "internalType": "address"
                                  },
                                  {
                                    "name": "percent",
                                    "type": "uint256",
                                    "internalType": "uint256"
                                  },
                                  {
                                    "name": "payload",
                                    "type": "bytes",
                                    "internalType": "bytes"
                                  },
                                  {
                                    "name": "networkFee",
                                    "type": "uint256",
                                    "internalType": "uint256"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "partner",
                    "type": "address",
                    "internalType": "address payable"
                  },
                  {
                    "name": "feePercent",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "permit",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "deadline",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "uuid",
                    "type": "bytes16",
                    "internalType": "bytes16"
                  }
                ]
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "protectedMultiSwap",
            "inputs": [
              {
                "name": "data",
                "type": "tuple",
                "internalType": "struct Utils.SellData",
                "components": [
                  {
                    "name": "fromToken",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "fromAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "toAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "expectedAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "beneficiary",
                    "type": "address",
                    "internalType": "address payable"
                  },
                  {
                    "name": "path",
                    "type": "tuple[]",
                    "internalType": "struct Utils.Path[]",
                    "components": [
                      {
                        "name": "to",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "totalNetworkFee",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "adapters",
                        "type": "tuple[]",
                        "internalType": "struct Utils.Adapter[]",
                        "components": [
                          {
                            "name": "adapter",
                            "type": "address",
                            "internalType": "address payable"
                          },
                          {
                            "name": "percent",
                            "type": "uint256",
                            "internalType": "uint256"
                          },
                          {
                            "name": "networkFee",
                            "type": "uint256",
                            "internalType": "uint256"
                          },
                          {
                            "name": "route",
                            "type": "tuple[]",
                            "internalType": "struct Utils.Route[]",
                            "components": [
                              {
                                "name": "index",
                                "type": "uint256",
                                "internalType": "uint256"
                              },
                              {
                                "name": "targetExchange",
                                "type": "address",
                                "internalType": "address"
                              },
                              {
                                "name": "percent",
                                "type": "uint256",
                                "internalType": "uint256"
                              },
                              {
                                "name": "payload",
                                "type": "bytes",
                                "internalType": "bytes"
                              },
                              {
                                "name": "networkFee",
                                "type": "uint256",
                                "internalType": "uint256"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "partner",
                    "type": "address",
                    "internalType": "address payable"
                  },
                  {
                    "name": "feePercent",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "permit",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "deadline",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "uuid",
                    "type": "bytes16",
                    "internalType": "bytes16"
                  }
                ]
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "protectedSimpleBuy",
            "inputs": [
              {
                "name": "data",
                "type": "tuple",
                "internalType": "struct Utils.SimpleData",
                "components": [
                  {
                    "name": "fromToken",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "toToken",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "fromAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "toAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "expectedAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "callees",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "exchangeData",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "startIndexes",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "values",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "beneficiary",
                    "type": "address",
                    "internalType": "address payable"
                  },
                  {
                    "name": "partner",
                    "type": "address",
                    "internalType": "address payable"
                  },
                  {
                    "name": "feePercent",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "permit",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "deadline",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "uuid",
                    "type": "bytes16",
                    "internalType": "bytes16"
                  }
                ]
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "protectedSimpleSwap",
            "inputs": [
              {
                "name": "data",
                "type": "tuple",
                "internalType": "struct Utils.SimpleData",
                "components": [
                  {
                    "name": "fromToken",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "toToken",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "fromAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "toAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "expectedAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "callees",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "exchangeData",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "startIndexes",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "values",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "beneficiary",
                    "type": "address",
                    "internalType": "address payable"
                  },
                  {
                    "name": "partner",
                    "type": "address",
                    "internalType": "address payable"
                  },
                  {
                    "name": "feePercent",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "permit",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "deadline",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "uuid",
                    "type": "bytes16",
                    "internalType": "bytes16"
                  }
                ]
              }
            ],
            "outputs": [
              {
                "name": "receivedAmount",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "simpleBuy",
            "inputs": [
              {
                "name": "data",
                "type": "tuple",
                "internalType": "struct Utils.SimpleData",
                "components": [
                  {
                    "name": "fromToken",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "toToken",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "fromAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "toAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "expectedAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "callees",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "exchangeData",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "startIndexes",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "values",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "beneficiary",
                    "type": "address",
                    "internalType": "address payable"
                  },
                  {
                    "name": "partner",
                    "type": "address",
                    "internalType": "address payable"
                  },
                  {
                    "name": "feePercent",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "permit",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "deadline",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "uuid",
                    "type": "bytes16",
                    "internalType": "bytes16"
                  }
                ]
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "simpleSwap",
            "inputs": [
              {
                "name": "data",
                "type": "tuple",
                "internalType": "struct Utils.SimpleData",
                "components": [
                  {
                    "name": "fromToken",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "toToken",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "fromAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "toAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "expectedAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "callees",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "exchangeData",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "startIndexes",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "values",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "beneficiary",
                    "type": "address",
                    "internalType": "address payable"
                  },
                  {
                    "name": "partner",
                    "type": "address",
                    "internalType": "address payable"
                  },
                  {
                    "name": "feePercent",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "permit",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "deadline",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "uuid",
                    "type": "bytes16",
                    "internalType": "bytes16"
                  }
                ]
              }
            ],
            "outputs": [
              {
                "name": "receivedAmount",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "swapOnUniswap",
            "inputs": [
              {
                "name": "amountIn",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "amountOutMin",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "path",
                "type": "address[]",
                "internalType": "address[]"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "swapOnUniswapFork",
            "inputs": [
              {
                "name": "factory",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "initCode",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "amountIn",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "amountOutMin",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "path",
                "type": "address[]",
                "internalType": "address[]"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "swapOnUniswapV2Fork",
            "inputs": [
              {
                "name": "tokenIn",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "amountIn",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "amountOutMin",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "weth",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "pools",
                "type": "uint256[]",
                "internalType": "uint256[]"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "swapOnZeroXv2",
            "inputs": [
              {
                "name": "fromToken",
                "type": "address",
                "internalType": "contract IERC20"
              },
              {
                "name": "toToken",
                "type": "address",
                "internalType": "contract IERC20"
              },
              {
                "name": "fromAmount",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "amountOutMin",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "exchange",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "payload",
                "type": "bytes",
                "internalType": "bytes"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "swapOnZeroXv4",
            "inputs": [
              {
                "name": "fromToken",
                "type": "address",
                "internalType": "contract IERC20"
              },
              {
                "name": "toToken",
                "type": "address",
                "internalType": "contract IERC20"
              },
              {
                "name": "fromAmount",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "amountOutMin",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "exchange",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "payload",
                "type": "bytes",
                "internalType": "bytes"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "swapOnUniswapV2ForkWithPermit",
            "inputs": [
              {
                "name": "tokenIn",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "amountIn",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "amountOutMin",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "weth",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "pools",
                "type": "uint256[]",
                "internalType": "uint256[]"
              },
              {
                "name": "permit",
                "type": "bytes",
                "internalType": "bytes"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "swapOnZeroXv4WithPermit",
            "inputs": [
              {
                "name": "fromToken",
                "type": "address",
                "internalType": "contract IERC20"
              },
              {
                "name": "toToken",
                "type": "address",
                "internalType": "contract IERC20"
              },
              {
                "name": "fromAmount",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "amountOutMin",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "exchange",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "payload",
                "type": "bytes",
                "internalType": "bytes"
              },
              {
                "name": "permit",
                "type": "bytes",
                "internalType": "bytes"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          }
        ]
      }
    },
    "metadata": {
      "owner": "Paraswap",
      "info": {
        "legalName": "ParaSwap",
        "lastUpdate": "2021-08-18T12:42:05Z",
        "url": "https://www.paraswap.io/"
      },
      "constants": {
        "addressAsEth": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
      }
    },
    "display": {
      "formats": {
        "0x2298207a": {
          "$id": "simpleBuy",
          "intent": "Swap",
          "required": [
            "data.fromAmount",
            "data.toAmount",
            "data.beneficiary"
          ],
          "fields": []
        },
        "0x46c67b6d": {
          "$id": "megaSwap",
          "intent": "Swap",
          "required": [
            "data.fromAmount",
            "data.toAmount",
            "data.beneficiary"
          ],
          "fields": []
        },
        "0x54840d1a": {
          "$id": "swapOnUniswap",
          "intent": "Swap",
          "required": [
            "amountIn",
            "amountOutMin"
          ],
          "fields": []
        },
        "0xf5661034": {
          "$id": "swapOnUniswapFork",
          "intent": "Swap",
          "required": [
            "amountIn",
            "amountOutMin"
          ],
          "fields": []
        },
        "0x0b86a4c1": {
          "$id": "swapOnUniswapV2Fork",
          "intent": "Swap",
          "required": [
            "amountIn",
            "amountOutMin",
            "pools"
          ],
          "fields": [
            {
              "path": "amountOutMin",
              "label": "Minimum to Receive",
              "format": "raw"
            },
            {
              "path": "pools.[-1]",
              "label": "Last pool",
              "format": "raw"
            }
          ]
        },
        "0x54e3f31b": {
          "$id": "simpleSwap",
          "intent": "Swap",
          "required": [
            "data.fromAmount",
            "data.toAmount",
            "data.beneficiary"
          ],
          "fields": []
        },
        "0x64466805": {
          "$id": "swapOnZeroXv4",
          "intent": "Swap",
          "required": [
            "fromAmount",
            "amountOutMin"
          ],
          "fields": []
        },
        "0x81033120": {
          "$id": "swapOnZeroXv2",
          "intent": "Swap",
          "required": [
            "fromAmount",
            "amountOutMin"
          ],
          "fields": []
        },
        "0x935fb84b": {
          "$id": "buyOnUniswap",
          "intent": "Buy",
          "required": [
            "amountInMax",
            "amountOut"
          ],
          "fields": []
        },
        "0xc03786b0": {
          "$id": "buyOnUniswapFork",
          "intent": "Buy",
          "required": [
            "amountInMax",
            "amountOut"
          ],
          "fields": []
        },
        "0xb2f1e6db": {
          "$id": "buyOnUniswapV2Fork",
          "intent": "Buy",
          "required": [
            "amountInMax",
            "amountOut",
            "pools.[-1]"
          ],
          "fields": [
            {
              "path": "amountOut",
              "label": "Amount to Receive",
              "format": "raw"
            },
            {
              "path": "pools.[-1]",
              "label": "Last pool",
              "format": "raw"
            }
          ]
        },
        "0x2941a712": {
          "$id": "buyOnUniswapV2ForkWithPermit",
          "intent": "Buy",
          "fields": [
            {
              "path": "amountOut",
              "label": "Amount to Receive",
              "format": "raw"
            },
            {
              "path": "pools.[-1]",
              "label": "Last pool",
              "format": "raw"
            }
          ]
        },
        "0xa94e78ef": {
          "$id": "multiSwap",
          "intent": "Swap",
          "required": [
            "data.fromAmount",
            "data.toAmount",
            "data.beneficiary"
          ],
          "fields": []
        },
        "0x6b4109d3": {
          "$id": "swapOnZeroXv4WithPermit",
          "intent": "Swap",
          "required": [
            "fromAmount",
            "amountOutMin",
            "exchange"
          ],
          "fields": []
        },
        "0x6e91538b": {
          "$id": "swapOnUniswapV2ForkWithPermit",
          "intent": "Swap",
          "required": [],
          "fields": [
            {
              "path": "amountOutMin",
              "label": "Minimum to Receive",
              "format": "raw"
            },
            {
              "path": "pools.[-1]",
              "label": "Last pool",
              "format": "raw"
            }
          ]
        }
      }
    }
  }
  '''
# ---
# name: test_convert_registry_files[tether/calldata-usdt.json]
  '''
  {
    "context": {
      "contract": {
        "deployments": [
          {
            "chainId": 1,
            "address": "0xdAC17F958D2ee523a2206206994597C13D831ec7"
          }
        ],
        "abi": [
          {
            "type": "function",
            "name": "approve",
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "constant": false,
            "payable": false
          },
          {
            "type": "function",
            "name": "transfer",
            "inputs": [
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "constant": false,
            "payable": false
          }
        ]
      }
    },
    "metadata": {
      "owner": "Tether",
      "info": {
        "legalName": "Tether Limited",
        "lastUpdate": "2017-11-28T12:41:21Z",
        "url": "https://tether.to/"
      },
      "token": {
        "name": "Tether USD",
        "ticker": "USDT",
        "decimals": 6
      }
    },
    "display": {
      "formats": {
        "transfer(address,uint256)": {
          "intent": "Send",
          "required": [
            "_to",
            "_value"
          ],
          "fields": [
            {
              "path": "_to",
              "label": "To",
              "format": "addressName"
            },
            {
              "path": "_value",
              "label": "Amount",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "$.context.contract.address"
              }
            }
          ]
        },
        "approve(address,uint256)": {
          "intent": "Approve",
          "required": [
            "_spender",
            "_value"
          ],
          "fields": [
            {
              "path": "_spender",
              "label": "Spender",
              "format": "addressName"
            },
            {
              "path": "_value",
              "label": "Amount",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "$.context.contract.address",
                "threshold": "0x8000000000000000000000000000000000000000000000000000000000000000"
              }
            }
          ]
        }
      }
    }
  }
  '''
# ---
# name: test_convert_registry_files[uniswap/calldata-UniswapV3Router02.json]
  '''
  {
    "context": {
      "contract": {
        "deployments": [
          {
            "chainId": 1,
            "address": "0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45"
          }
        ],
        "abi": [
          {
            "type": "constructor",
            "inputs": [
              {
                "name": "_factoryV2",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "factoryV3",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "_positionManager",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "_WETH9",
                "type": "address",
                "internalType": "address"
              }
            ],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "WETH9",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "internalType": "address"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "approveMax",
            "inputs": [
              {
                "name": "token",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "approveMaxMinusOne",
            "inputs": [
              {
                "name": "token",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "approveZeroThenMax",
            "inputs": [
              {
                "name": "token",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "approveZeroThenMaxMinusOne",
            "inputs": [
              {
                "name": "token",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "callPositionManager",
            "inputs": [
              {
                "name": "data",
                "type": "bytes",
                "internalType": "bytes"
              }
            ],
            "outputs": [
              {
                "name": "result",
                "type": "bytes",
                "internalType": "bytes"
              }
            ],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "checkOracleSlippage",
            "inputs": [
              {
                "name": "paths",
                "type": "bytes[]",
                "internalType": "bytes[]"
              },
              {
                "name": "amounts",
                "type": "uint128[]",
                "internalType": "uint128[]"
              },
              {
                "name": "maximumTickDivergence",
                "type": "uint24",
                "internalType": "uint24"
              },
              {
                "name": "secondsAgo",
                "type": "uint32",
                "internalType": "uint32"
              }
            ],
            "outputs": [],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "checkOracleSlippage",
            "inputs": [
              {
                "name": "path",
                "type": "bytes",
                "internalType": "bytes"
              },
              {
                "name": "maximumTickDivergence",
                "type": "uint24",
                "internalType": "uint24"
              },
              {
                "name": "secondsAgo",
                "type": "uint32",
                "internalType": "uint32"
              }
            ],
            "outputs": [],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "exactInput",
            "inputs": [
              {
                "name": "params",
                "type": "tuple",
                "internalType": "struct IV3SwapRouter.ExactInputParams",
                "components": [
                  {
                    "name": "path",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "recipient",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "amountIn",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "amountOutMinimum",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              }
            ],
            "outputs": [
              {
                "name": "amountOut",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "exactInputSingle",
            "inputs": [
              {
                "name": "params",
                "type": "tuple",
                "internalType": "struct IV3SwapRouter.ExactInputSingleParams",
                "components": [
                  {
                    "name": "tokenIn",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "tokenOut",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "fee",
                    "type": "uint24",
                    "internalType": "uint24"
                  },
                  {
                    "name": "recipient",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "amountIn",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "amountOutMinimum",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "sqrtPriceLimitX96",
                    "type": "uint160",
                    "internalType": "uint160"
                  }
                ]
              }
            ],
            "outputs": [
              {
                "name": "amountOut",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "exactOutput",
            "inputs": [
              {
                "name": "params",
                "type": "tuple",
                "internalType": "struct IV3SwapRouter.ExactOutputParams",
                "components": [
                  {
                    "name": "path",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "recipient",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "amountOut",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "amountInMaximum",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              }
            ],
            "outputs": [
              {
                "name": "amountIn",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "exactOutputSingle",
            "inputs": [
              {
                "name": "params",
                "type": "tuple",
                "internalType": "struct IV3SwapRouter.ExactOutputSingleParams",
                "components": [
                  {
                    "name": "tokenIn",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "tokenOut",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "fee",
                    "type": "uint24",
                    "internalType": "uint24"
                  },
                  {
                    "name": "recipient",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "amountOut",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "amountInMaximum",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "sqrtPriceLimitX96",
                    "type": "uint160",
                    "internalType": "uint160"
                  }
                ]
              }
            ],
            "outputs": [
              {
                "name": "amountIn",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "factory",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "internalType": "address"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "factoryV2",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "internalType": "address"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "getApprovalType",
            "inputs": [
              {
                "name": "token",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "amount",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint8",
                "internalType": "enum IApproveAndCall.ApprovalType"
              }
            ],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "increaseLiquidity",
            "inputs": [
              {
                "name": "params",
                "type": "tuple",
                "internalType": "struct IApproveAndCall.IncreaseLiquidityParams",
                "components": [
                  {
                    "name": "token0",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "token1",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "amount0Min",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "amount1Min",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              }
            ],
            "outputs": [
              {
                "name": "result",
                "type": "bytes",
                "internalType": "bytes"
              }
            ],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "mint",
            "inputs": [
              {
                "name": "params",
                "type": "tuple",
                "internalType": "struct IApproveAndCall.MintParams",
                "components": [
                  {
                    "name": "token0",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "token1",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "fee",
                    "type": "uint24",
                    "internalType": "uint24"
                  },
                  {
                    "name": "tickLower",
                    "type": "int24",
                    "internalType": "int24"
                  },
                  {
                    "name": "tickUpper",
                    "type": "int24",
                    "internalType": "int24"
                  },
                  {
                    "name": "amount0Min",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "amount1Min",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "recipient",
                    "type": "address",
                    "internalType": "address"
                  }
                ]
              }
            ],
            "outputs": [
              {
                "name": "result",
                "type": "bytes",
                "internalType": "bytes"
              }
            ],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "multicall",
            "inputs": [
              {
                "name": "previousBlockhash",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "data",
                "type": "bytes[]",
                "internalType": "bytes[]"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bytes[]",
                "internalType": "bytes[]"
              }
            ],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "multicall",
            "inputs": [
              {
                "name": "deadline",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "data",
                "type": "bytes[]",
                "internalType": "bytes[]"
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bytes[]",
                "internalType": "bytes[]"
              }
            ],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "multicall",
            "inputs": [
              {
                "name": "data",
                "type": "bytes[]",
                "internalType": "bytes[]"
              }
            ],
            "outputs": [
              {
                "name": "results",
                "type": "bytes[]",
                "internalType": "bytes[]"
              }
            ],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "positionManager",
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "internalType": "address"
              }
            ],
            "stateMutability": "view"
          },
          {
            "type": "function",
            "name": "pull",
            "inputs": [
              {
                "name": "token",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "value",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "refundETH",
            "inputs": [],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "selfPermit",
            "inputs": [
              {
                "name": "token",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "value",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "deadline",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "v",
                "type": "uint8",
                "internalType": "uint8"
              },
              {
                "name": "r",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "s",
                "type": "bytes32",
                "internalType": "bytes32"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "selfPermitAllowed",
            "inputs": [
              {
                "name": "token",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "nonce",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "expiry",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "v",
                "type": "uint8",
                "internalType": "uint8"
              },
              {
                "name": "r",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "s",
                "type": "bytes32",
                "internalType": "bytes32"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "selfPermitAllowedIfNecessary",
            "inputs": [
              {
                "name": "token",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "nonce",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "expiry",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "v",
                "type": "uint8",
                "internalType": "uint8"
              },
              {
                "name": "r",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "s",
                "type": "bytes32",
                "internalType": "bytes32"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "selfPermitIfNecessary",
            "inputs": [
              {
                "name": "token",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "value",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "deadline",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "v",
                "type": "uint8",
                "internalType": "uint8"
              },
              {
                "name": "r",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "s",
                "type": "bytes32",
                "internalType": "bytes32"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "swapExactTokensForTokens",
            "inputs": [
              {
                "name": "amountIn",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "amountOutMin",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "path",
                "type": "address[]",
                "internalType": "address[]"
              },
              {
                "name": "to",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [
              {
                "name": "amountOut",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "swapTokensForExactTokens",
            "inputs": [
              {
                "name": "amountOut",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "amountInMax",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "path",
                "type": "address[]",
                "internalType": "address[]"
              },
              {
                "name": "to",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [
              {
                "name": "amountIn",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "sweepToken",
            "inputs": [
              {
                "name": "token",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "amountMinimum",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "recipient",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "sweepToken",
            "inputs": [
              {
                "name": "token",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "amountMinimum",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "sweepTokenWithFee",
            "inputs": [
              {
                "name": "token",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "amountMinimum",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "feeBips",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "feeRecipient",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "sweepTokenWithFee",
            "inputs": [
              {
                "name": "token",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "amountMinimum",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "recipient",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "feeBips",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "feeRecipient",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "uniswapV3SwapCallback",
            "inputs": [
              {
                "name": "amount0Delta",
                "type": "int256",
                "internalType": "int256"
              },
              {
                "name": "amount1Delta",
                "type": "int256",
                "internalType": "int256"
              },
              {
                "name": "_data",
                "type": "bytes",
                "internalType": "bytes"
              }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
          },
          {
            "type": "function",
            "name": "unwrapWETH9",
            "inputs": [
              {
                "name": "amountMinimum",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "recipient",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "unwrapWETH9",
            "inputs": [
              {
                "name": "amountMinimum",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "unwrapWETH9WithFee",
            "inputs": [
              {
                "name": "amountMinimum",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "recipient",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "feeBips",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "feeRecipient",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "unwrapWETH9WithFee",
            "inputs": [
              {
                "name": "amountMinimum",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "feeBips",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "feeRecipient",
                "type": "address",
                "internalType": "address"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "function",
            "name": "wrapETH",
            "inputs": [
              {
                "name": "value",
                "type": "uint256",
                "internalType": "uint256"
              }
            ],
            "outputs": [],
            "stateMutability": "payable"
          },
          {
            "type": "receive",
            "stateMutability": "payable"
          }
        ]
      }
    },
    "metadata": {
      "owner": "Uniswap",
      "info": {
        "legalName": "Uniswap Labs",
        "lastUpdate": "2021-12-14T00:00:00Z",
        "url": "https://uniswap.org/"
      }
    },
    "display": {
      "formats": {
        "0xb858183f": {
          "$id": "exactInput",
          "intent": "Swap",
          "required": [
            "params.amountIn",
            "params.amountOutMinimum",
            "params.recipient"
          ],
          "fields": [
            {
              "path": "params.amountIn",
              "label": "Amount to Send",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "params.path.[0:19]"
              }
            },
            {
              "path": "params.amountOutMinimum",
              "label": "Minimum amount to Receive",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "params.path.[-20:-1]"
              }
            },
            {
              "path": "params.recipient",
              "label": "Beneficiary",
              "format": "addressName"
            }
          ]
        },
        "0x04e45aaf": {
          "$id": "exactInputSingle",
          "intent": "swap",
          "required": [
            "params.amountIn",
            "params.amountOutMininimum",
            "params.fee",
            "params.recipient"
          ],
          "fields": [
            {
              "path": "params.amountIn",
              "label": "Send",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "params.tokenIn"
              }
            },
            {
              "path": "params.amountOutMinimum",
              "label": "Receive Minimum",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "params.tokenOut"
              }
            },
            {
              "path": "params.fee",
              "label": "Uniswap fee",
              "format": "unit",
              "params": {
                "base": "%",
                "decimals": 4,
                "prefix": false
              }
            },
            {
              "path": "params.recipient",
              "label": "Beneficiary",
              "format": "addressName"
            }
          ]
        },
        "0x09b81346": {
          "$id": "exactOutput",
          "intent": "Swap",
          "required": [
            "params.amountInMaximum",
            "params.amountOut",
            "params.recipient"
          ],
          "fields": [
            {
              "path": "params.amountInMaximum",
              "label": "Maximum Amount to Send",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "params.path.[0:19]"
              }
            },
            {
              "path": "params.amountOut",
              "label": "Amount to Receive",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "params.path.[-20:-1]"
              }
            },
            {
              "path": "params.recipient",
              "label": "Beneficiary",
              "format": "addressName"
            }
          ]
        },
        "0x5023b4df": {
          "$id": "exactOutputSingle",
          "intent": "Swap",
          "fields": [
            {
              "path": "params.amountInMaximum",
              "label": "Maximum Amount to Send",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "params.tokenIn"
              }
            },
            {
              "path": "params.amountOut",
              "label": "Amount to Receive",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "params.tokenOut"
              }
            },
            {
              "path": "params.fee",
              "label": "Uniswap fee",
              "format": "unit",
              "params": {
                "base": "%",
                "decimals": 4,
                "prefix": false
              }
            },
            {
              "path": "params.recipient",
              "label": "Beneficiary",
              "format": "addressName"
            }
          ]
        },
        "0x472b43f3": {
          "$id": "swapExactTokensForTokens",
          "intent": "Swap",
          "fields": [
            {
              "path": "amountIn",
              "label": "Amount to Send",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "path[0]"
              }
            },
            {
              "path": "amountOutMin",
              "label": "Minimum amount to Receive",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "path.[-1]"
              }
            }
          ]
        },
        "0x42712a67": {
          "$id": "swapTokensForExactTokens",
          "intent": "Swap",
          "fields": [
            {
              "path": "amountOut",
              "label": "Amount to Receive",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "path.[-1]"
              }
            },
            {
              "path": "amountInMax",
              "label": "Maximum Amount to Send",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "path.[0]"
              }
            }
          ]
        }
      }
    }
  }
  '''
# ---
# name: test_convert_registry_files[uniswap/eip712-UniswapX-DutchOrder.json]
  '''
  {
    "$schema": "../../specs/erc7730-v1.schema.json",
    "context": {
      "eip712": {
        "deployments": [
          {
            "chainId": 1,
            "address": "0x000000000022D473030F116dDEE9F6B43aC78BA3"
          }
        ],
        "domain": {
          "name": "Permit2"
        },
        "schemas": [
          {
            "primaryType": "PermitWitnessTransferFrom",
            "types": {
              "DutchOrder": [
                {
                  "name": "info",
                  "type": "OrderInfo"
                },
                {
                  "name": "decayStartTime",
                  "type": "uint256"
                },
                {
                  "name": "decayEndTime",
                  "type": "uint256"
                },
                {
                  "name": "inputToken",
                  "type": "address"
                },
                {
                  "name": "inputStartAmount",
                  "type": "uint256"
                },
                {
                  "name": "inputEndAmount",
                  "type": "uint256"
                },
                {
                  "name": "outputs",
                  "type": "DutchOutput[]"
                }
              ],
              "DutchOutput": [
                {
                  "name": "token",
                  "type": "address"
                },
                {
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "name": "endAmount",
                  "type": "uint256"
                },
                {
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "EIP712Domain": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "name": "chainId",
                  "type": "uint256"
                },
                {
                  "name": "verifyingContract",
                  "type": "address"
                }
              ],
              "OrderInfo": [
                {
                  "name": "reactor",
                  "type": "address"
                },
                {
                  "name": "swapper",
                  "type": "address"
                },
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "name": "additionalValidationContract",
                  "type": "address"
                },
                {
                  "name": "additionalValidationData",
                  "type": "bytes"
                }
              ],
              "PermitWitnessTransferFrom": [
                {
                  "name": "permitted",
                  "type": "TokenPermissions"
                },
                {
                  "name": "spender",
                  "type": "address"
                },
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "name": "witness",
                  "type": "DutchOrder"
                }
              ],
              "TokenPermissions": [
                {
                  "name": "token",
                  "type": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          }
        ]
      }
    },
    "metadata": {
      "owner": "Uniswap",
      "info": {
        "legalName": "Uniswap Labs",
        "lastUpdate": "2021-12-14T00:00:00Z",
        "url": "https://uniswap.org/"
      }
    },
    "display": {
      "formats": {
        "PermitWitnessTransferFrom": {
          "intent": "UniswapX Dutch Order",
          "fields": [
            {
              "path": "spender",
              "label": "Approve to spender",
              "format": "addressName"
            },
            {
              "path": "permitted.amount",
              "label": "Approve amount",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "permitted.token"
              }
            },
            {
              "path": "witness.inputStartAmount",
              "label": "Spend max",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "witness.inputToken"
              }
            },
            {
              "path": "witness.outputs.[]",
              "fields": [
                {
                  "path": "endAmount",
                  "label": "Minimum amounts to receive",
                  "format": "tokenAmount",
                  "params": {
                    "tokenPath": "token"
                  }
                },
                {
                  "path": "recipient",
                  "label": "On Addresses",
                  "format": "addressName"
                }
              ]
            },
            {
              "path": "deadline",
              "label": "Approval expire",
              "format": "date",
              "params": {
                "encoding": "timestamp"
              }
            }
          ]
        }
      }
    }
  }
  '''
# ---
# name: test_convert_registry_files[uniswap/eip712-UniswapX-ExclusiveDutchOrder.json]
  '''
  {
    "$schema": "../../specs/erc7730-v1.schema.json",
    "context": {
      "eip712": {
        "deployments": [
          {
            "chainId": 1,
            "address": "0x000000000022D473030F116dDEE9F6B43aC78BA3"
          }
        ],
        "domain": {
          "name": "Permit2"
        },
        "schemas": [
          {
            "primaryType": "PermitWitnessTransferFrom",
            "types": {
              "DutchOutput": [
                {
                  "name": "token",
                  "type": "address"
                },
                {
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "name": "endAmount",
                  "type": "uint256"
                },
                {
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "EIP712Domain": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "name": "chainId",
                  "type": "uint256"
                },
                {
                  "name": "verifyingContract",
                  "type": "address"
                }
              ],
              "ExclusiveDutchOrder": [
                {
                  "name": "info",
                  "type": "OrderInfo"
                },
                {
                  "name": "decayStartTime",
                  "type": "uint256"
                },
                {
                  "name": "decayEndTime",
                  "type": "uint256"
                },
                {
                  "name": "exclusiveFiller",
                  "type": "address"
                },
                {
                  "name": "exclusivityOverrideBps",
                  "type": "uint256"
                },
                {
                  "name": "inputToken",
                  "type": "address"
                },
                {
                  "name": "inputStartAmount",
                  "type": "uint256"
                },
                {
                  "name": "inputEndAmount",
                  "type": "uint256"
                },
                {
                  "name": "outputs",
                  "type": "DutchOutput[]"
                }
              ],
              "OrderInfo": [
                {
                  "name": "reactor",
                  "type": "address"
                },
                {
                  "name": "swapper",
                  "type": "address"
                },
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "name": "additionalValidationContract",
                  "type": "address"
                },
                {
                  "name": "additionalValidationData",
                  "type": "bytes"
                }
              ],
              "PermitWitnessTransferFrom": [
                {
                  "name": "permitted",
                  "type": "TokenPermissions"
                },
                {
                  "name": "spender",
                  "type": "address"
                },
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "name": "witness",
                  "type": "ExclusiveDutchOrder"
                }
              ],
              "TokenPermissions": [
                {
                  "name": "token",
                  "type": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          }
        ]
      }
    },
    "metadata": {
      "owner": "Uniswap",
      "info": {
        "legalName": "Uniswap Labs",
        "lastUpdate": "2021-12-14T00:00:00Z",
        "url": "https://uniswap.org/"
      }
    },
    "display": {
      "formats": {
        "PermitWitnessTransferFrom": {
          "intent": "UniswapX Exclusive Dutch Order",
          "fields": [
            {
              "path": "spender",
              "label": "Approve to spender",
              "format": "addressName"
            },
            {
              "path": "permitted.amount",
              "label": "Approve amount",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "permitted.token"
              }
            },
            {
              "path": "witness.inputStartAmount",
              "label": "Spend max",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "witness.inputToken"
              }
            },
            {
              "path": "witness.outputs.[]",
              "fields": [
                {
                  "path": "endAmount",
                  "label": "Minimum amounts to receive",
                  "format": "tokenAmount",
                  "params": {
                    "tokenPath": "token"
                  }
                },
                {
                  "path": "recipient",
                  "label": "On Addresses",
                  "format": "addressName"
                }
              ]
            },
            {
              "path": "deadline",
              "label": "Approval expire",
              "format": "date",
              "params": {
                "encoding": "timestamp"
              }
            }
          ]
        }
      }
    }
  }
  '''
# ---
# name: test_convert_registry_files[uniswap/eip712-UniswapX-LimitOrder.json]
  '''
  {
    "$schema": "../../specs/erc7730-v1.schema.json",
    "context": {
      "eip712": {
        "deployments": [
          {
            "chainId": 1,
            "address": "0x000000000022D473030F116dDEE9F6B43aC78BA3"
          }
        ],
        "domain": {
          "name": "Permit2"
        },
        "schemas": [
          {
            "primaryType": "PermitWitnessTransferFrom",
            "types": {
              "EIP712Domain": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "name": "chainId",
                  "type": "uint256"
                },
                {
                  "name": "verifyingContract",
                  "type": "address"
                }
              ],
              "LimitOrder": [
                {
                  "name": "info",
                  "type": "OrderInfo"
                },
                {
                  "name": "inputToken",
                  "type": "address"
                },
                {
                  "name": "inputAmount",
                  "type": "uint256"
                },
                {
                  "name": "outputs",
                  "type": "OutputToken[]"
                }
              ],
              "OrderInfo": [
                {
                  "name": "reactor",
                  "type": "address"
                },
                {
                  "name": "swapper",
                  "type": "address"
                },
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "name": "additionalValidationContract",
                  "type": "address"
                },
                {
                  "name": "additionalValidationData",
                  "type": "bytes"
                }
              ],
              "OutputToken": [
                {
                  "name": "token",
                  "type": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "PermitWitnessTransferFrom": [
                {
                  "name": "permitted",
                  "type": "TokenPermissions"
                },
                {
                  "name": "spender",
                  "type": "address"
                },
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "name": "witness",
                  "type": "LimitOrder"
                }
              ],
              "TokenPermissions": [
                {
                  "name": "token",
                  "type": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          }
        ]
      }
    },
    "metadata": {
      "owner": "Uniswap",
      "info": {
        "legalName": "Uniswap Labs",
        "lastUpdate": "2021-12-14T00:00:00Z",
        "url": "https://uniswap.org/"
      }
    },
    "display": {
      "formats": {
        "PermitWitnessTransferFrom": {
          "intent": "UniswapX Limit Order",
          "fields": [
            {
              "path": "spender",
              "label": "Approve to spender",
              "format": "addressName"
            },
            {
              "path": "permitted.amount",
              "label": "Amount allowance",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "permitted.token"
              }
            },
            {
              "path": "witness.inputAmount",
              "label": "Send",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "witness.inputToken"
              }
            },
            {
              "path": "witness.outputs.[]",
              "fields": [
                {
                  "path": "amount",
                  "label": "Min amount to receive",
                  "format": "tokenAmount",
                  "params": {
                    "tokenPath": "token"
                  }
                },
                {
                  "path": "recipient",
                  "label": "On Address",
                  "format": "addressName"
                }
              ]
            },
            {
              "path": "deadline",
              "label": "Approval expire",
              "format": "date",
              "params": {
                "encoding": "timestamp"
              }
            }
          ]
        }
      }
    }
  }
  '''
# ---
# name: test_convert_registry_files[uniswap/eip712-permit2.json]
  '''
  {
    "$schema": "../../specs/erc7730-v1.schema.json",
    "context": {
      "eip712": {
        "deployments": [
          {
            "chainId": 1,
            "address": "0x000000000022D473030F116dDEE9F6B43aC78BA3"
          }
        ],
        "domain": {
          "name": "Permit2"
        },
        "schemas": [
          {
            "primaryType": "PermitBatch",
            "types": {
              "EIP712Domain": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "name": "chainId",
                  "type": "uint256"
                },
                {
                  "name": "verifyingContract",
                  "type": "address"
                }
              ],
              "PermitDetails": [
                {
                  "name": "token",
                  "type": "address"
                },
                {
                  "name": "amount",
                  "type": "uint160"
                },
                {
                  "name": "expiration",
                  "type": "uint48"
                },
                {
                  "name": "nonce",
                  "type": "uint48"
                }
              ],
              "PermitBatch": [
                {
                  "name": "details",
                  "type": "PermitDetails[]"
                },
                {
                  "name": "spender",
                  "type": "address"
                },
                {
                  "name": "sigDeadline",
                  "type": "uint256"
                }
              ]
            }
          },
          {
            "primaryType": "PermitSingle",
            "types": {
              "EIP712Domain": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "name": "chainId",
                  "type": "uint256"
                },
                {
                  "name": "verifyingContract",
                  "type": "address"
                }
              ],
              "PermitDetails": [
                {
                  "name": "token",
                  "type": "address"
                },
                {
                  "name": "amount",
                  "type": "uint160"
                },
                {
                  "name": "expiration",
                  "type": "uint48"
                },
                {
                  "name": "nonce",
                  "type": "uint48"
                }
              ],
              "PermitSingle": [
                {
                  "name": "details",
                  "type": "PermitDetails"
                },
                {
                  "name": "spender",
                  "type": "address"
                },
                {
                  "name": "sigDeadline",
                  "type": "uint256"
                }
              ]
            }
          }
        ]
      }
    },
    "metadata": {
      "owner": "Uniswap",
      "info": {
        "legalName": "Uniswap Labs",
        "lastUpdate": "2021-12-14T00:00:00Z",
        "url": "https://uniswap.org/"
      }
    },
    "display": {
      "formats": {
        "PermitSingle": {
          "$id": "Permit2 Permit Single",
          "intent": "Authorize spending of token",
          "required": [
            "spender",
            "details.amount"
          ],
          "screens": {},
          "fields": [
            {
              "path": "spender",
              "label": "Spender",
              "format": "addressName"
            },
            {
              "path": "details.amount",
              "label": "Amount allowance",
              "format": "tokenAmount",
              "params": {
                "tokenPath": "details.token"
              }
            },
            {
              "path": "details.expiration",
              "label": "Approval expires",
              "format": "date",
              "params": {
                "encoding": "timestamp"
              }
            }
          ]
        },
        "PermitBatch": {
          "$id": "Permit2 Permit Batch",
          "intent": "Authorize spending of tokens",
          "required": [
            "spender",
            "details"
          ],
          "screens": {},
          "fields": [
            {
              "path": "spender",
              "label": "Spender",
              "format": "addressName"
            },
            {
              "path": "details.[]",
              "fields": [
                {
                  "path": "amount",
                  "label": "Amount allowance",
                  "format": "tokenAmount",
                  "params": {
                    "tokenPath": "token"
                  }
                },
                {
                  "path": "expiration",
                  "label": "Approval expires",
                  "format": "date",
                  "params": {
                    "encoding": "timestamp"
                  }
                }
              ]
            }
          ]
        }
      }
    }
  }
  '''
# ---
